@model Developee.Customer
@{
    ViewBag.Title = "Login";
}

<head>
    <link href="~/Contents/Login.css" rel="stylesheet" type="text/css" />
    <title>Login Page</title>
    <script>

        function validateForm() {
            var name = document.myform.username.value;
            var password = document.myform.password.value;

            if (name == null || name == "") {
                alert("Name can't be blank");
                return false;
            } else if (password.length < 6) {
                alert("Password must be at least 6 characters long.");
                return false;
            }
        }
    </script>

</head>
<form action="~/Customers/Login" method="post" name="myform" onsubmit="return validateForm()">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary()

        <section class="login-page">
            <form>
                <div class="box">
                    <div class="form-head">
                        <h2>Member Login</h2>
                    </div>
                    <div class="form-body">
                        <input type="text" placeholder="Enter UserName" name="username" />
                        <input type="password" placeholder="Password" name="password" />
                    </div>

                    <div class="form-footer">
                        <button type="submit" name="login" value="Login" onclick="">Login</button>
                    </div>

                    <a href="/Customers/CustSignUp">New User Register Here</a>

                </div>
            </form>

        </section>
    }
</form>






<!--

    <div class="form-horizontal">
        <h4>Customer Login</h4>
        <hr />
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">

        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>

    -->
}
